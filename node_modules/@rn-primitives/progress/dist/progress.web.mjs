'use client'
import {
  __objRest,
  __spreadValues
} from "./chunk-X44HCPWV.mjs";

// src/progress.web.tsx
import * as Progress from "@radix-ui/react-progress";
import * as Slot from "@rn-primitives/slot";
import * as React from "react";
import { View as View2 } from "react-native";
var ProgressContext = React.createContext(null);
var Root2 = React.forwardRef(
  (_a, ref) => {
    var _b = _a, { asChild, value, max, getValueLabel } = _b, props = __objRest(_b, ["asChild", "value", "max", "getValueLabel"]);
    const Component = asChild ? Slot.View : View2;
    return /* @__PURE__ */ React.createElement(ProgressContext.Provider, { value: { value, max } }, /* @__PURE__ */ React.createElement(Progress.Root, { value, max, getValueLabel, asChild: true }, /* @__PURE__ */ React.createElement(Component, __spreadValues({ ref }, props))));
  }
);
Root2.displayName = "RootProgress";
var Indicator2 = React.forwardRef((_a, ref) => {
  var _b = _a, { asChild } = _b, props = __objRest(_b, ["asChild"]);
  const Component = asChild ? Slot.View : View2;
  return /* @__PURE__ */ React.createElement(Progress.Indicator, { asChild: true }, /* @__PURE__ */ React.createElement(Component, __spreadValues({ ref }, props)));
});
Indicator2.displayName = "IndicatorProgress";
export {
  Indicator2 as Indicator,
  Root2 as Root
};
