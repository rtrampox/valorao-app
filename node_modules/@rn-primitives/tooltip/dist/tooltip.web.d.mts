import * as react_native from 'react-native';
import { View } from 'react-native';
import { PositionedContentProps } from '@rn-primitives/types';
import * as React from 'react';
import { T as TooltipRootProps, a as TooltipTriggerRef, b as TooltipPortalProps, c as TooltipOverlayProps } from './types-opYTmxP0.mjs';

declare const Root: React.ForwardRefExoticComponent<react_native.ViewProps & {
    asChild?: boolean;
} & TooltipRootProps & React.RefAttributes<View>>;
declare const Trigger: React.ForwardRefExoticComponent<Omit<react_native.PressableProps & React.RefAttributes<View>, "ref"> & {
    asChild?: boolean;
} & {
    onKeyDown?: (ev: React.KeyboardEvent) => void;
    onKeyUp?: (ev: React.KeyboardEvent) => void;
} & React.RefAttributes<TooltipTriggerRef>>;
declare function Portal({ forceMount, container, children }: TooltipPortalProps): React.JSX.Element;
declare const Overlay: React.ForwardRefExoticComponent<Omit<react_native.PressableProps & React.RefAttributes<View>, "ref"> & {
    asChild?: boolean;
} & {
    onKeyDown?: (ev: React.KeyboardEvent) => void;
    onKeyUp?: (ev: React.KeyboardEvent) => void;
} & TooltipOverlayProps & React.RefAttributes<View>>;
declare const Content: React.ForwardRefExoticComponent<react_native.ViewProps & {
    asChild?: boolean;
} & PositionedContentProps & React.RefAttributes<View>>;

export { Content, Overlay, Portal, Root, TooltipTriggerRef, Trigger };
